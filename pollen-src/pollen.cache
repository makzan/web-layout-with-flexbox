((3) 0 () 31 ("    " "  " "}" "Photo credit: Dick Chan." " and " "bronze" " " "." "language-css" "@media screen {" "width: 100%;" "$columns-count: 12;" "@for $i from 1 through $columns-count {" "      " "width: 100%/$columns-count * $i;" "        " "@for $i from 1 through length($screen-sizes) {" "@media screen and (min-width: nth($breakpoints, $i)){" "</div>" "<div class=\"row\">" "<ol>" "</ol>" "          " "<figure>" "<figcaption>This is a placeholder.</figcaption>" "</figure>" "<img src=\"http://placehold.it/300x300\" alt=\"placeholder image\" />" "<div class=\"small-12 col\">" "Chapter 0—Preparation" "Thomas Mak" "http://flexbox.website/material/") () (h ! (equal) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-1/index.html.pm" . unix) h ! (equal) (doc q root (h1 "Chapter 1—Introducing Flexbox")) (mod-time . 1432231644) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-1/index.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/appendix/object-fit.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Object-fit") c (c p c (c scss c (c p c "figure {" c (q br) c (? . 1) q "padding: 5px;") c (c p c "img {" c (q br) c (? . 0) c (? . 10) c (q br) c (? . 0) c "height: 200px;" c (q br) c (? . 0) c "object-fit: cover;" c (q br) c (? . 1) c (? . 2)) c (c p c "figcaption {" c (q br) c (? . 0) c "text-align: center;" c (q br) c (? . 1) c (? . 2) c (q br) c (? . 2))))) (mod-time . 1432233144) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/appendix/object-fit.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/index.ptree" . unix) h ! (equal) (doc q pagetree-root index.html (chapter-0/index.html chapter-0/about-makzan.html chapter-0/contact.html chapter-0/preparing.html) (chapter-1/index.html chapter-1/flex-grow-and-shrink.html) (chapter-2/index.html chapter-2/grid-and-block-grid.html chapter-2/mobile-first.html chapter-2/floating-grid.html chapter-2/grid.html) (chapter-3/index.html) summary.html (appendix/index.html appendix/object-fit.html) log.html) (mod-time . 1432233168) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/index.ptree"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-3/index.html.pm" . unix) h ! (equal) (doc q root (h1 "Chapter 3—Grid, powered by FlexBox") (p "Now we are done working on the medium screen.") (p "Let’s make it") (p "Final demo:") (p "http://codepen.io/makzan/pen/GJjMEL")) (mod-time . 1432232565) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-3/index.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/index.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Building Flexbox website") c (q p "This is the material I originally created for workshop “" (strong "Web Layout with Flexbox") "” at " (em "World Internet Developer Summit 2015") " in Hong Kong.") c (c ol c (c li c (c a c (q (href "/chapter-0/")) c (? . 28))) q (li (a ((href "/chapter-1/")) "Chapter 1—Before Flexbox")) (li (a ((href "/chapter-2")) "Chapter 2—Using Flexbox")))) (mod-time . 1432233670) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/index.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-2/index.html.pm" . unix) h ! (equal) (doc q root (h1 "Chapter 2—Row–Column grid layout")) (mod-time . 1432231534) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-2/index.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-1/flex-grow-and-shrink.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Flex grow and shrink") c (q p "We mainly focus on the ") c (q code "flex-grow") c (c p c (? . 4)) q (code "flex-shrink") (p " property.")) (mod-time . 1432228396) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-1/flex-grow-and-shrink.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-2/mobile-first.html.pm" . unix) h ! (equal) (doc q root (h1 "Mobile first design") (p "Mobile first means that during our website planning, we plan the content and layout for the mobile first. Planning for mobile first ensures us to consider the most important thing of our website. The screen is so tiny that we have to think clearly what’s important enough to earn a place there. And what is the most important thing that we put it on top of this tiny screen.")) (mod-time . 1432227395) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-2/mobile-first.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/appendix/index.html.pm" . unix) h ! (equal) (doc q root (h1 "Appendix") (p "Something that’s not related to Flexbox, but still worth a mention.")) (mod-time . 1432233085) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/appendix/index.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/log.html.pm" . unix) h ! (equal) (doc c root c (q h1 "log") c (c p c (c li c (q strong "2015-05-22") c (? . 6) q "First draft written for WIDS2015."))) (mod-time . 1432233452) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/log.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-0/about-makzan.html.pm" . unix) h ! (equal) (doc c root c (q h1 "About Makzan") c (c aside c (c figure c (c p c (c img c (c (q src "http://makzan.net/assets/hkbu-sharing-3f407523e22e39c56e436a521adef9e6.jpg") c (c alt c (? . 3))))) c (c figcaption c (? . 3)))) c (c p c "I’m " c (c em c (? . 29)) c ". You’ll also find me on internet as " c (q em "Makzan") c ". I teach know-how via " c (q a ((href "https://www.packtpub.com/game-development/html5-game-development-hotshot")) "books") c ", " c (q a ((href "https://www.packtpub.com/game-development/html5-game-development-video")) "screencasts") c (? . 4) c (q a ((href "http://www.mobiledesignclass.com")) "classes") c (? . 7)) c (q p "I’m now in Macao to help transfering technology knowledge to Macao’s small-medium enterprise. That’s why I’m currently working at CPTTM—Macau Productivity and Technology Transfer Center.") c (c h2 c (c (c id c (u . "macau-productivity-and-technology-transfer-center"))) c (c a c (c (c href c (u . "#macau-productivity-and-technology-transfer-center"))) q "Macau Productivity and Technology Transfer Center")) c (q p "We are the largest IT training center in Macau. We provide training on networking, app development, creative designs, 3D printing and lots more.") c (c p c "We also train students and teenagers to different competitions. For instance, I was the students in 2003 and won the " c (c em c (? . 5)) c " medal of web design in switzerland. I became the trainer from 2009 and brought my students to win the " c (c em c (? . 5)) c (? . 4) q (em "silver") " medal in London and Germany in recent years.")) (mod-time . 1432234031) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-0/about-makzan.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-0/contact.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Have a chat") c (q p "You may contact me for any kind of questions and sharings. I focus on mobile web and iOS app develompnet. I also built multiplayer interaction with socket server and node.js. I like to learn more.") c (c p c (q small "twitter:") c (? . 6) c (q a ((href "https://twitter.com/makzan")) "@makzan") c (q br) c (q small "website:") c (? . 6) c (q a ((href "http://makzan.net")) "makzan.net") c (q br) c (q small "email:") c (? . 6) c (q a ((href "mailto:mak@makzan.net")) "mak@makzan.net") c (q br) c (q small "work email:") c (? . 6) q (a ((href "mailto:thomas@cpttm.org.mo")) "thomas@cpttm.org.mo")) q (p "Just ping me at any time for a chat.")) (mod-time . 1432231952) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-0/contact.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-2/grid-and-block-grid.html.pm" . unix) h ! (equal) (doc q root (h1 "Grid and block grid")) (mod-time . 1432228988) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-2/grid-and-block-grid.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-2/floating-grid.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Floating grid") c (c p c "Revisiting the grid layout with " c (q em "float") c (? . 7)) c (q p "Row column grid system.") c (c pre c (c code c (c (c class c (? . 8))) c (? . 11) c (u . "\n") c (? . 9) c (u . "\n") c (? . 1) c (? . 12) c (u . "\n") c (? . 0) c ".col-#{$i} {" c (u . "\n") c (? . 13) c (? . 14) c (u . "\n") c (? . 0) c (? . 2) c (u . "\n") c (? . 1) c (? . 2) c (u . "\n") c (? . 2))) c (q p "Calculated result:") c (c pre c (c code c (c (c class c (? . 8))) c (? . 9) c (u . "\n") c (? . 1) c ".col-1 {" c (u . "\n") c (? . 0) c "width: 8.33333%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-2 {" c (u . "\n") c (? . 0) c "width: 16.66667%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-3 {" c (u . "\n") c (? . 0) c "width: 25%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-4 {" c (u . "\n") c (? . 0) c "width: 33.33333%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-5 {" c (u . "\n") c (? . 0) c "width: 41.66667%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-6 {" c (u . "\n") c (? . 0) c "width: 50%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-7 {" c (u . "\n") c (? . 0) c "width: 58.33333%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-8 {" c (u . "\n") c (? . 0) c "width: 66.66667%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-9 {" c (u . "\n") c (? . 0) c "width: 75%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-10 {" c (u . "\n") c (? . 0) c "width: 83.33333%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-11 {" c (u . "\n") c (? . 0) c "width: 91.66667%;" c (u . "\n") c (? . 1) c (? . 2) c (u . "\n\n") c (? . 1) c ".col-12 {" c (u . "\n") c (? . 0) c (? . 10) c (u . "\n") c (? . 1) c (? . 2) c (u . "\n") c (? . 2))) c (c h2 c (c (c id c (u . "applying-mobile-first-approach"))) c (c a c (c (c href c (u . "#applying-mobile-first-approach"))) q "Applying mobile first approach")) c (c pre c (c code c (c (c class c (? . 8))) c (? . 11) c (u . "\n") c "$breakpoint: 800px;" c (u . "\n") c (? . 9) c (u . "\n") c (? . 1) c (? . 12) c (u . "\n") c (? . 0) c ".small-#{$i} {" c (u . "\n") c (? . 13) c (? . 14) c (u . "\n") c (? . 0) c (? . 2) c (u . "\n") c (? . 1) c (? . 2) c (u . "\n") c (? . 2) c (u . "\n") c "@media screen and (min-width: $breakpoint) {" c (u . "\n") c (? . 1) c (? . 12) c (u . "\n") c (? . 0) c ".medium-#{$i} {" c (u . "\n") c (? . 13) c (? . 14) c (u . "\n") c (? . 0) c (? . 2) c (u . "\n") c (? . 1) c (? . 2) c (u . "\n") c (? . 2)))) (mod-time . 1432234845) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-2/floating-grid.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/summary.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Summary") c (q p "After going through this book, you should have more understandings on how we can make use of Flexbox when building website. It provides a very simple way to archive some layouts that was difficult to implement.") c (c h2 c (c (c id c (u . "useful-resources"))) c (c a c (c (c href c (u . "#useful-resources"))) q "Useful resources")) q (p (a ((href "https://css-tricks.com/snippets/css/a-guide-to-flexbox/")) "CSS-Trick’s complete guide to Flexbox") (br) (a ((href "http://makzan.net/web-design-scrapbook/learning-flexbox/")) "My cheatsheet on Flexbox alignment"))) (mod-time . 1432233362) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/summary.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-2/grid.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Implementation of the grid") c (q p "It’s very easy to define our " (em "mobile-first grid system") " by using the Scss’s list, loop and variable.") c (c pre c (c code c (c (c class c (? . 8))) c (? . 11) c (u . "\n") c "$screen-sizes: small medium large xlarge xxlarge;" c (u . "\n") c "$breakpoints: 0 500px 1000px 1200px 1600px;" c (u . "\n") c (? . 16) c (u . "\n") c (? . 1) c (? . 17) c (u . "\n") c (? . 0) c ".#{nth($screen-sizes, $i)}-vertical { flex-direction:column; }" c (u . "\n") c (? . 0) c ".#{nth($screen-sizes, $i)}-horizontal { flex-direction:row; }" c (u . "\n") c (? . 0) c ".#{nth($screen-sizes, $i)}-hidden { display: none; }" c (u . "\n") c (? . 0) c ".#{nth($screen-sizes, $i)}-auto   { display: block; flex: 1}" c (u . "\n") c (? . 0) c ".#{nth($screen-sizes, $i)}-shrink { display: block; flex: 0 1 auto}" c (u . "\n") c (? . 0) c "@for $j from 1 through $columns-count {" c (u . "\n") c (? . 13) c ".#{nth($screen-sizes, $i)}-#{$j} {" c (u . "\n") c (? . 15) c "display: block;" c (u . "\n") c (? . 15) c "flex: 0 1 calc( 100% / #{$columns-count} * #{$j} );" c (u . "\n") c (? . 13) c (? . 2) c (u . "\n") c (? . 0) c (? . 2) c (u . "\n") c (? . 1) c (? . 2) c (u . "\n") c (? . 2))) c (q h1 "Implementation of block grid") c (c pre c (c code c (c (c class c (? . 8))) c "/* Block grid */" c (u . "\n") c ".block-grid {" c (u . "\n") c (? . 1) c "display: flex;" c (u . "\n") c (? . 1) c "flex-wrap: wrap;" c (u . "\n") c (? . 2) c (u . "\n") c ".block-grid > * { flex: 1; }" c (u . "\n") c (? . 16) c (u . "\n") c (? . 1) c (? . 17) c (u . "\n") c (? . 0) c "@for $j from 2 through 10 {" c (u . "\n") c (? . 13) c ".block-grid.#{nth($screen-sizes, $i)}-up-to-#{$j} > * {" c (u . "\n") c (? . 15) c "flex: 0 1 calc( 100% / #{$j} );" c (u . "\n") c (? . 13) c (? . 2) c (u . "\n") c (? . 0) c (? . 2) c (u . "\n") c (? . 1) c (? . 2) c (u . "\n") c (? . 2))) c (q h1 "HTML that uses the grid") c (c p c (c html c "<header>" c (q br) c (? . 1) c (? . 19) c (q br) c (? . 0) c (? . 27) c (q br) c (? . 13) c "<h1>Cake Shop</h1>" c (q br) c (? . 0) c (? . 18) c (q br) c (? . 1) c (? . 18) c (q br) c "</header>" c (q br) c (? . 19) c (q br) c (? . 1) c "<nav class=\"small-12 medium-shrink xxlarge-2 col\">" c (q br) c (? . 0) c "<ul class=\"block-grid medium-vertical\">" c (q br) c (? . 13) c "<li><a href=\"#\">Home</a></li>" c (q br) c (? . 13) c "<li><a href=\"#\">About</a></li>" c (q br) c (? . 13) c "<li><a href=\"#\">Clients</a></li>" c (q br) c (? . 13) c "<li><a href=\"#\">Contact Us</a></li>" c (q br) c (? . 0) c "</ul>" c (q br) c (? . 1) c "</nav>" c (q br) c (? . 1) c "<aside class=\"small-hidden large-shrink xxlarge-2 col\">" c (q br) c (? . 0) c "<p>Sections</p>" c (q br) c (? . 0) c (? . 20) c (q br) c (? . 13) c "<li><strong>Section 1</strong>" c (q br) c (? . 15) c (? . 20) c (q br) c (? . 22) c "<li>Section 1.1</li>" c (q br) c (? . 15) c (? . 21) c (q br) c (? . 13) c "</li>" c (q br) c (? . 13) c "<li>Section 2</li>" c (q br) c (? . 13) c "<li>Section 3</li>" c (q br) c (? . 0) c (? . 21) c (q br) c (? . 1) c "</aside>" c (q br) c (? . 1) c "<main class=\"small-12 medium-auto col\">" c (q br) c (? . 0) c "<article>" c (q br) c (? . 13) c "<h1>Main Heading of the article</h1>" c (q br) c (? . 13) c "<p>Introducing of the essay goes here.</p>" c (q br) c (? . 13) c "<h2>Section 1—Photos</h2>" c (q br) c (? . 13) c "<p>You’ll find a couple of images in the following that shows the flexbox-based block-grid system.</p>" c (q br) c (? . 13) c "<div class=\"block-grid small-up-to-2 medium-up-to-3\">" c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c (? . 26) c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c "<img src=\"http://placehold.it/350x300\" alt=\"placeholder image\" />" c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c "<img src=\"http://placehold.it/700x400\" alt=\"placeholder image\" />" c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c "<img src=\"http://placehold.it/500x300\" alt=\"placeholder image\" />" c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c "<img src=\"http://placehold.it/500x600\" alt=\"placeholder image\" />" c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c (? . 26) c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c (? . 26) c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 15) c (? . 23) c (q br) c (? . 22) c (? . 26) c (q br) c (? . 22) c (? . 24) c (q br) c (? . 15) c (? . 25) c (q br) c (? . 13) c (? . 18) c (q br) c (? . 13) c "<h3>1.1 Sub section</h3>" c (q br) c (? . 13) c "<p>This is a paragraph of section 1.1. It’s the sub-section that conclude the section 1.</p>" c (q br) c (? . 13) c "<h2>2. Section 2</h2>" c (q br) c (? . 13) c "<p>We create more sections. An essay usually contains more than 1 section. This is the reason we put section 2 here.</p>" c (q br) c (? . 13) c "<h2>3. Summary</h2>" c (q br) c (? . 13) c "<p>This section summerize the entire article.</p>" c (q br) c (? . 0) c "</article>" c (q br) c (? . 1) c "</main>" c (q br) c (? . 1) c "<div class=\"advertisement row\">" c (q br) c (? . 0) c "<div class=\"small-hidden xlarge-shrink col\">" c (q br) c (? . 13) c "<img src=\"http://placehold.it/160x600&text=ad.\" alt=\"Advertisement\" />" c (q br) c (? . 0) c (? . 18) c (q br) c (? . 1) c (? . 18) c (q br) c (? . 18) c (q br) c "<footer>" c (q br) c (? . 1) c (? . 19) c (q br) c (? . 0) c (? . 27) c (q br) c (? . 13) c "CC0 Do anything license." c (q br) c (? . 0) c (? . 18) c (q br) c (? . 1) c (? . 18) q (br) "</footer>"))) (mod-time . 1432234832) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-2/grid.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-0/index.html.pm" . unix) h ! (equal) (doc c root c (c h1 c (? . 28)) c (c p c "Welcome to the workshop. I’m " c (c em c (? . 29)) c (? . 7)) c (c p c "You may find these workshop slides at " c (q a ((href "http://flexbox.website")) "Flexbox.website") c (? . 7))) (mod-time . 1432224145) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-0/index.html.pm"))) ((p+ #"/home/ubuntu/workspace/pollen-src/chapter-0/preparing.html.pm" . unix) h ! (equal) (doc c root c (q h1 "Preparing for the workshop") c (q p "You’ll need to bring your laptop with a modern browser and your favorite code editor installed. During the workshop, we will have some hand-on exercises. You can download all the material in the following link. It contains the code, images and libraries we need.") c (c p c (c a c (c (c href c (? . 30))) c (? . 30))) c (c h2 c (c (c id c (u . "-prefix-free-library"))) c (c a c (c (c href c (u . "#-prefix-free-library"))) q "-prefix-free library")) c (q p (a ((href "http://leaverou.github.io/prefixfree/")) "-prefix-free") " is the JS library made by " (a ((href "http://lea.verou.me/")) "Lea Verou") ". It parses the CSS properties and apply centain vendor prefixes on the rules by determing the browser version. This library allows us to skip worrying about different syntaxes—prefixes and the old syntaxes.") c (c h2 c (c (c id c (u . "preprocessor"))) c (c a c (c (c href c (u . "#preprocessor"))) q "Preprocessor")) q (p "The logic in CSS preprocessor provides us the DRY—Don’t repeat yourself— way to write the CSS code. We will use some SCSS code when defining the grid layout. It’s loop and list feature helps reducing the lines of code a lot. If you are using other preprocessor, you may find their equivalents in " (a ((href "http://pre.com")) "CSSPre.com") ". If you aren’t using any preprocessor, no worry, we also provide the full CSS code. ")) (mod-time . 1432232496) (metas h ! (equal) (here-path . "/home/ubuntu/workspace/pollen-src/chapter-0/preparing.html.pm")))))